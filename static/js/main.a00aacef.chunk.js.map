{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Game","useState","currentPacmanIndex","setPacmanIndex","prevPacmanIndex","setPrevPacmanIndex","squares","setSquares","stage","setStage","layout","setLayout","walls","setWalls","count","setCount","ghost1Index","setGhost1Index","ghost1PrevIndex","setGhost1PrevIndex","ghost1Direction","setGhost1Direction","stepsToChangeGhost1","setStepsToChangeGhost1","ghost1Steps","setGhost1Steps","ghost2Index","setGhost2Index","ghost2PrevIndex","setGhost2PrevIndex","ghost2Direction","setGhost2Direction","stepsToChangeGhost2","setStepsToChangeGhost2","ghost2Steps","setGhost2Steps","ghost3Index","setGhost3Index","ghost3PrevIndex","setGhost3PrevIndex","ghost3Direction","setGhost3Direction","stepsToChangeGhost3","setStepsToChangeGhost3","ghost3Steps","setGhost3Steps","ghost4Index","setGhost4Index","ghost4PrevIndex","setGhost4PrevIndex","ghost4Direction","setGhost4Direction","stepsToChangeGhost4","setStepsToChangeGhost4","ghost4Steps","setGhost4Steps","pacDots","setPacdots","width","useLayoutEffect","getRandomInt","min","max","Math","ceil","floor","random","finalMap","num","lay","prevSquare","push","directions","i","direction","indexOf","finalLay","forEach","element","index","numOfNaighbors","createLay","finalWalls","elem","getWalls","length","board","className","createGhost","ghostIndex","createBoard","getPacdots","renderGhost","states","prevIndex","setPrevIndex","ghost2States","ghost3States","ghost4States","splice","undefined","moveGhost","sets","way","changeDirection","steps","stepsToChange","setDirection","setSteps","setStepToChange","setIndex","ghost1States","ghost1Sets","ghost2Sets","ghost3Sets","ghost4Sets","timerId","setInterval","clearInterval","movePacman","e","keyCode","document","addEventListener","removeEventListener","game","movementButtons","handlerPacMovement","target","newGame","onClick","window","location","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a00aacef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useEffect, useState, useLayoutEffect } from 'react';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>PACMAN</h1>\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Game(){\r\n\r\n  const [currentPacmanIndex, setPacmanIndex] = useState();\r\n  const [prevPacmanIndex, setPrevPacmanIndex] = useState();\r\n  const [squares, setSquares] = useState([]);\r\n  //stages: \"preparation\" -> \"game\" -> \"game over\"\r\n  const [stage, setStage] = useState();\r\n  const [layout, setLayout] = useState([]);\r\n  const [walls, setWalls] =useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [ghost1Index, setGhost1Index] = useState();\r\n  const [ghost1PrevIndex, setGhost1PrevIndex] = useState()\r\n  \r\n  const [ghost1Direction, setGhost1Direction] = useState(1); \r\n  const [stepsToChangeGhost1, setStepsToChangeGhost1] = useState(3);\r\n  const [ghost1Steps, setGhost1Steps] = useState(0);\r\n  \r\n\r\n  const [ghost2Index, setGhost2Index] = useState();\r\n  const [ghost2PrevIndex, setGhost2PrevIndex] = useState()\r\n \r\n  const [ghost2Direction, setGhost2Direction] = useState(1); \r\n  const [stepsToChangeGhost2, setStepsToChangeGhost2] = useState(3);\r\n  const [ghost2Steps, setGhost2Steps] = useState(0);\r\n\r\n  const [ghost3Index, setGhost3Index] = useState();\r\n  const [ghost3PrevIndex, setGhost3PrevIndex] = useState()\r\n \r\n  const [ghost3Direction, setGhost3Direction] = useState(1); \r\n  const [stepsToChangeGhost3, setStepsToChangeGhost3] = useState(3);\r\n  const [ghost3Steps, setGhost3Steps] = useState(0);\r\n\r\n  const [ghost4Index, setGhost4Index] = useState();\r\n  const [ghost4PrevIndex, setGhost4PrevIndex] = useState()\r\n  \r\n  const [ghost4Direction, setGhost4Direction] = useState(1); \r\n  const [stepsToChangeGhost4, setStepsToChangeGhost4] = useState(3);\r\n  const [ghost4Steps, setGhost4Steps] = useState(0);\r\n\r\n  const [pacDots, setPacdots] = useState(1);\r\n  //width of square\r\n  const [width, setWidth] = useState(28);\r\n  \r\n \r\n  \r\n\r\n  useLayoutEffect(() => {\r\n    \r\n\r\n    function getRandomInt(min, max) {\r\n      min = Math.ceil(min);\r\n      max = Math.floor(max);\r\n      return Math.floor(Math.random() * (max - min)) + min; \r\n    }\r\n    function createLay(num) {\r\n      \r\n      const lay = [];\r\n      let prevSquare = 15;\r\n      lay.push(15);\r\n      \r\n      let directions = [-2, +2, -width*2, +width*2, -3, +3, -width*3, width*3];\r\n\r\n      for(let i = 0; i < num; i++){\r\n        \r\n        let direction = getRandomInt(0, 4);\r\n        \r\n        \r\n        \r\n        if(lay.indexOf(prevSquare + directions[direction]) !== -1){\r\n          direction = getRandomInt(0, 8);\r\n        } \r\n        if(lay.indexOf(prevSquare + directions[direction]) !== -1){\r\n          direction = getRandomInt(0, 8);\r\n        } \r\n\r\n        \r\n        switch(direction){\r\n          \r\n          \r\n          case 0:\r\n            if(prevSquare % width - 1 !== 0){\r\n              prevSquare = prevSquare -1;\r\n              lay.push(prevSquare);\r\n              prevSquare = prevSquare - 1;\r\n              lay.push(prevSquare);\r\n            } \r\n            break;\r\n          \r\n          case 1:\r\n            if(prevSquare % width < width - 2){\r\n              prevSquare = prevSquare + 1;\r\n              lay.push(prevSquare);\r\n              prevSquare = prevSquare + 1;\r\n              lay.push(prevSquare);\r\n            } \r\n            break;\r\n          \r\n          case 2:\r\n            if(prevSquare - width*2 >= 0){\r\n              prevSquare = prevSquare - width;\r\n              lay.push(prevSquare);\r\n              prevSquare = prevSquare - width;\r\n              lay.push(prevSquare);\r\n            } \r\n            break;\r\n          \r\n          case 3:\r\n            if(prevSquare + width*2 < width * width){\r\n              prevSquare = prevSquare + width;\r\n              lay.push(prevSquare);\r\n              prevSquare = prevSquare + width;\r\n              lay.push(prevSquare);\r\n            }\r\n            break;\r\n\r\n          \r\n        }\r\n        \r\n      }\r\n\r\n      const finalLay = [];\r\n      for(let i = 0; i < 784; i++) {\r\n        if(lay.indexOf(i)!==-1){\r\n          finalLay.push(0);\r\n        } else  {\r\n          finalLay.push(1);\r\n        }\r\n      }\r\n      \r\n      finalLay.forEach((element, index)=> {\r\n        if(element === 0){\r\n          let numOfNaighbors = 0;\r\n          \r\n          if(finalLay[index+1] ===0) numOfNaighbors++;\r\n          if(finalLay[index-1] ===0) numOfNaighbors++;\r\n          if(finalLay[index+28] ===0) numOfNaighbors++;\r\n          if(finalLay[index-28] ===0) numOfNaighbors++;\r\n\r\n          if(numOfNaighbors < 1) finalLay[index] = 1;\r\n       }\r\n\r\n      });\r\n      return finalLay;\r\n    }\r\n\r\n      \r\n    function getWalls(lay) {\r\n      const walls = []\r\n      lay.forEach((elem, index) => {\r\n        if(elem === 1) walls.push(index);\r\n      })\r\n      return walls;\r\n    }\r\n    const finalMap = createLay(400);\r\n    const finalWalls = getWalls(finalMap)\r\n    setWalls(finalWalls);\r\n    setLayout(finalMap);\r\n\r\n    \r\n    const directions = [-1, +1, width, -width];     \r\n    setGhost1Direction(directions[Math.floor(Math.random() * directions.length)]); \r\n\r\n    setStage(\"preparation\");\r\n    \r\n  }, []);\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    if(stage === \"preparation\") {\r\n      \r\n\r\n      function createBoard() {\r\n        const board = [];\r\n        \r\n        for(let i=0; i < layout.length; i++){\r\n          if(layout[i] === 0) {\r\n            board.push(<div className=\"pac-dot\" key={i}></div>)\r\n          } else if (layout[i] === 1) {\r\n            board.push(<div className=\"wall\" key={i}></div>)\r\n          }   \r\n        }\r\n        \r\n        \r\n        board[currentPacmanIndex] = <div className=\"pac-man\" key={currentPacmanIndex}>\r\n          <div className = \"pacman_eye right_eye\"></div>\r\n          <div className = \"pacman_mouth right_mouth\"></div>\r\n        </div>;\r\n\r\n        function createGhost(ghostIndex){\r\n          board[ghostIndex] = <div className=\"ghost\" key={ghostIndex}>\r\n          <div className = \"left_eye\"></div>\r\n          <div className = \"right_eye\"></div>\r\n        </div>;\r\n        }\r\n\r\n        createGhost(ghost1Index);\r\n        createGhost(ghost2Index);\r\n        createGhost(ghost3Index);\r\n        createGhost(ghost4Index);\r\n        \r\n        return board;\r\n\r\n      }\r\n      \r\n      for(let i = 0; i<200; i++){\r\n        if(layout[i]===0){\r\n          setGhost1Index(i);\r\n          \r\n          break;\r\n        }\r\n      }\r\n      for(let i = 400; i > 201; i--){\r\n        if(layout[i]===0){\r\n          setGhost2Index(i);\r\n          \r\n          break;\r\n        }\r\n      }\r\n      for(let i = 401; i<600; i++){\r\n        if(layout[i]===0){\r\n          setGhost3Index(i);\r\n          \r\n          break;\r\n        }\r\n      }\r\n      for(let i = layout.length; i > 601; i--){\r\n        if(layout[i]===0){\r\n          setGhost4Index(i);\r\n          \r\n          break;\r\n        }\r\n      }\r\n      for(let i = 301; i<500; i++){\r\n        if(layout[i]===0){\r\n          \r\n          setPacmanIndex(i);\r\n          \r\n          break;\r\n        }\r\n      }\r\n\r\n      setSquares(createBoard());\r\n      \r\n      function getPacdots() {\r\n        const pacDots = [];\r\n        for(let i = 0; i < layout.length; i++){\r\n          if(layout[i] === 0) pacDots.push(i);\r\n        }\r\n        return pacDots;\r\n      }\r\n      setPacdots(getPacdots());\r\n\r\n      \r\n      setStage(\"game\");\r\n      \r\n      \r\n\r\n\r\n    } else if(stage === \"game\"){\r\n      if(currentPacmanIndex === ghost1Index || currentPacmanIndex === ghost2Index || currentPacmanIndex === ghost3Index || currentPacmanIndex === ghost4Index) {\r\n        setStage(\"game over\");\r\n      }\r\n      const ghost1States = {\r\n        index: ghost1Index,\r\n        prevIndex: ghost1PrevIndex,\r\n        \r\n        setPrevIndex: setGhost1PrevIndex\r\n      };\r\n      const ghost2States = {\r\n        index: ghost2Index,\r\n        prevIndex: ghost2PrevIndex,\r\n        \r\n        setPrevIndex: setGhost2PrevIndex\r\n      };\r\n      const ghost3States = {\r\n        index: ghost3Index,\r\n        prevIndex: ghost3PrevIndex,\r\n        \r\n        setPrevIndex: setGhost3PrevIndex\r\n      };\r\n      const ghost4States = {\r\n        index: ghost4Index,\r\n        prevIndex: ghost4PrevIndex,\r\n        \r\n        setPrevIndex: setGhost4PrevIndex\r\n      };\r\n      function renderGhost(states) {\r\n        \r\n        if(pacDots.indexOf(states.prevIndex) !== -1) {\r\n          squares[states.prevIndex] = <div className=\"pac-dot\" key={states.prevIndex}></div>\r\n        } else if (pacDots.indexOf(states.prevIndex) === -1) {\r\n          squares[states.prevIndex] = <div key={states.prevIndex}></div>\r\n        }\r\n        \r\n        \r\n        \r\n        states.setPrevIndex(states.index);\r\n        \r\n        squares[states.index] = <div className=\"ghost\" key={states.index}>\r\n          <div className = \"left_eye\"></div>\r\n          <div className = \"right_eye\"></div>\r\n        </div>;\r\n        \r\n      }\r\n\r\n      renderGhost(ghost1States);\r\n      renderGhost(ghost2States);\r\n      renderGhost(ghost3States);\r\n      renderGhost(ghost4States);\r\n\r\n      setSquares(squares);\r\n\r\n      if(prevPacmanIndex !== currentPacmanIndex){\r\n\r\n        function action() {\r\n          \r\n          if(pacDots.indexOf(currentPacmanIndex)!==-1){\r\n            pacDots.splice(pacDots.indexOf(currentPacmanIndex), 1);\r\n            setPacdots(pacDots);\r\n          }\r\n\r\n          \r\n          squares[prevPacmanIndex] = <div key={prevPacmanIndex}></div>;\r\n          if(currentPacmanIndex - prevPacmanIndex === 1) {\r\n            squares[currentPacmanIndex] = \r\n            <div className=\"pac-man\" key={currentPacmanIndex}>\r\n              <div className = \"pacman_eye right_eye\"></div>\r\n              <div className = \"pacman_mouth right_mouth\"></div>\r\n            </div>;\r\n          } else if(currentPacmanIndex - prevPacmanIndex === -1) {\r\n            squares[currentPacmanIndex] = \r\n            <div className=\"pac-man\" key={currentPacmanIndex}>\r\n              <div className = \"pacman_eye left_eye\"></div>\r\n              <div className = \"pacman_mouth left_mouth\"></div>\r\n            </div>;\r\n          } else if(currentPacmanIndex - prevPacmanIndex === 28) {\r\n            squares[currentPacmanIndex] = \r\n            <div className=\"pac-man\" key={currentPacmanIndex}>\r\n              <div className = \"pacman_eye down_eye\"></div>\r\n              <div className = \"pacman_mouth down_mouth\"></div>\r\n            </div>;\r\n          } else if(currentPacmanIndex - prevPacmanIndex === -28) {\r\n            squares[currentPacmanIndex] = \r\n            <div className=\"pac-man\" key={currentPacmanIndex}>\r\n              <div className = \"pacman_eye up_eye\"></div>\r\n              <div className = \"pacman_mouth up_mouth\"></div>\r\n            </div>;\r\n          } else if(prevPacmanIndex === undefined) {\r\n            squares[currentPacmanIndex] = \r\n            <div className=\"pac-man\" key={currentPacmanIndex}>\r\n              <div className = \"pacman_eye right_eye\"></div>\r\n              <div className = \"pacman_mouth right_mouth\"></div>\r\n            </div>;\r\n          }\r\n          \r\n          \r\n          setSquares(squares);\r\n        }\r\n\r\n        action();\r\n        \r\n      }\r\n    }\r\n    \r\n  });\r\n  \r\n\r\n  useLayoutEffect(() => {\r\n    if(stage === \"game\"){\r\n      \r\n\r\n      const ghost1States = {\r\n        index: ghost1Index,\r\n        direction: ghost1Direction,\r\n        stepsToChange: stepsToChangeGhost1,\r\n        steps: ghost1Steps\r\n      };\r\n      const ghost1Sets={\r\n        setIndex: setGhost1Index,\r\n        setDirection: setGhost1Direction,\r\n        setStepToChange: setStepsToChangeGhost1,\r\n        setSteps: setGhost1Steps\r\n      };\r\n      const ghost2States = {\r\n        index: ghost2Index,\r\n        direction: ghost2Direction,\r\n        stepsToChange: stepsToChangeGhost2,\r\n        steps: ghost2Steps\r\n      };\r\n      const ghost2Sets={\r\n        setIndex: setGhost2Index,\r\n        setDirection: setGhost2Direction,\r\n        setStepToChange: setStepsToChangeGhost2,\r\n        setSteps: setGhost2Steps\r\n      };\r\n      const ghost3States = {\r\n        index: ghost3Index,\r\n        direction: ghost3Direction,\r\n        stepsToChange: stepsToChangeGhost3,\r\n        steps: ghost3Steps\r\n      };\r\n      const ghost3Sets={\r\n        setIndex: setGhost3Index,\r\n        setDirection: setGhost3Direction,\r\n        setStepToChange: setStepsToChangeGhost3,\r\n        setSteps: setGhost3Steps\r\n      };\r\n      const ghost4States = {\r\n        index: ghost4Index,\r\n        direction: ghost4Direction,\r\n        stepsToChange: stepsToChangeGhost4,\r\n        steps: ghost4Steps\r\n      };\r\n      const ghost4Sets={\r\n        setIndex: setGhost4Index,\r\n        setDirection: setGhost4Direction,\r\n        setStepToChange: setStepsToChangeGhost4,\r\n        setSteps: setGhost4Steps\r\n      };\r\n      function moveGhost(states, sets){\r\n        \r\n        \r\n        \r\n        let way = Math.floor(Math.random() * 2);\r\n        \r\n        function getRandomInt(min, max) {\r\n          min = Math.ceil(min);\r\n          max = Math.floor(max);\r\n          return Math.floor(Math.random() * (max - min)) + min; \r\n        }\r\n\r\n        const directions = [-1, +1, width, -width]; \r\n\r\n\r\n        function changeDirection(direction){\r\n          if(states.steps !== states.stepsToChange) {\r\n            sets.setDirection(direction);\r\n            sets.setSteps(states.steps + 1);\r\n          } else if (states.steps === states.stepsToChange) {\r\n              \r\n              sets.setDirection(directions[Math.floor(Math.random() * directions.length)]);\r\n              sets.setStepToChange(getRandomInt(2, 3));\r\n              sets.setSteps(0);\r\n          }\r\n        } \r\n        \r\n        \r\n        switch(states.direction) {\r\n           \r\n          case -1:\r\n            \r\n            if (states.index % width !== 0 && walls.indexOf(states.index - 1) == -1) {\r\n              \r\n              sets.setIndex(states.index - 1);\r\n              changeDirection(-1);   \r\n              break;\r\n            } else if(way === 0 && states.index - width >= 0 && walls.indexOf(states.index - width) == -1) {\r\n              \r\n              sets.setIndex(states.index - width);\r\n              changeDirection(-28); \r\n              break;\r\n            } else if (way === 1 && states.index + width < width * width && walls.indexOf(states.index + width)==-1) {\r\n              \r\n              sets.setIndex(states.index + width);\r\n              changeDirection(28); \r\n              break;\r\n            } else if (states.index % width < width - 1 && walls.indexOf(states.index + 1)==-1) {\r\n              \r\n              sets.setIndex(states.index + 1);\r\n              changeDirection(1); \r\n              break;\r\n            }\r\n          case -28:\r\n            if(states.index - width >= 0 && walls.indexOf(states.index - width)==-1) {\r\n              \r\n              sets.setIndex(states.index - width);\r\n              changeDirection(-28); \r\n              break;\r\n            } else if (way === 0 && states.index % width < width - 1 && walls.indexOf(states.index + 1)==-1) {\r\n              \r\n              sets.setIndex(states.index + 1);\r\n              changeDirection(1); \r\n              break;\r\n            } else if (way === 1 && states.index % width !== 0 && walls.indexOf(states.index - 1)==-1) {\r\n              \r\n              sets.setIndex(states.index - 1);\r\n              changeDirection(-1); \r\n              break;\r\n            } else if (states.index + width < width * width && walls.indexOf(states.index + width)==-1) {\r\n              \r\n              sets.setIndex(states.index + width);\r\n              changeDirection(28); \r\n              break;\r\n            }\r\n            \r\n            \r\n          case 1:\r\n            if (states.index % width < width - 1 && walls.indexOf(states.index + 1)==-1) {\r\n             \r\n              sets.setIndex(states.index + 1);\r\n              changeDirection(1); \r\n              break;\r\n            } else if(way === 0 && states.index - width >= 0 && walls.indexOf(states.index - width)==-1) {\r\n              \r\n              sets.setIndex(states.index - width);\r\n              changeDirection(-28); \r\n              break;\r\n            } else if (way === 1 && states.index + width < width * width && walls.indexOf(states.index + width)==-1) {\r\n              \r\n              sets.setIndex(states.index + width);\r\n              changeDirection(28); \r\n              break;\r\n            } else if (states.index % width !== 0 && walls.indexOf(states.index - 1)==-1) {\r\n              \r\n              sets.setIndex(states.index - 1);\r\n              changeDirection(-1); \r\n              break;\r\n            }\r\n            \r\n          case 28:\r\n            if (states.index + width < width * width && walls.indexOf(states.index + width)==-1) {\r\n              \r\n              sets.setIndex(states.index + width);\r\n              changeDirection(28); \r\n              break;\r\n            } else if (way === 0 && states.index % width < width - 1 && walls.indexOf(states.index + 1)==-1) {\r\n              \r\n              sets.setIndex(states.index + 1);\r\n              changeDirection(1); \r\n              break;\r\n            } else if (way === 1 && states.index % width !== 0 && walls.indexOf(states.index - 1)==-1) {\r\n              \r\n              sets.setIndex(states.index - 1);\r\n              changeDirection(-1); \r\n              break;\r\n            } else if(states.index - width >= 0 && walls.indexOf(states.index - width)==-1) {\r\n              \r\n              sets.setIndex(states.index - width);\r\n              changeDirection(-28); \r\n              break;\r\n            }\r\n            \r\n          \r\n\r\n        }\r\n         \r\n        \r\n      }\r\n      \r\n      function moveGhosts() {\r\n        moveGhost(ghost1States, ghost1Sets);\r\n        moveGhost(ghost2States, ghost2Sets);\r\n        moveGhost(ghost3States, ghost3Sets);\r\n        moveGhost(ghost4States, ghost4Sets);\r\n      }\r\n      let timerId = setInterval(moveGhosts, 100);\r\n      \r\n      return () => {\r\n        clearInterval(timerId);\r\n        \r\n      }\r\n\r\n    }\r\n  });\r\n \r\n  \r\n  useLayoutEffect(() => {\r\n  \r\n    if(stage === \"game\"){\r\n      \r\n      if(pacDots.length === 0) setStage(\"game over\");\r\n\r\n      document.addEventListener(\"keyup\", movePacman);\r\n      \r\n      function movePacman(e) {\r\n\r\n        switch(e.keyCode) {\r\n          case 37:\r\n            if(currentPacmanIndex % width !== 0 && walls.indexOf(currentPacmanIndex-1) === -1){\r\n              setPrevPacmanIndex(currentPacmanIndex);         \r\n              setPacmanIndex(currentPacmanIndex-1);\r\n              setCount(count + 1);\r\n            }\r\n            break;\r\n          case 38:\r\n            if(currentPacmanIndex - width > 0 && walls.indexOf(currentPacmanIndex-width) === -1){\r\n              setPrevPacmanIndex(currentPacmanIndex);\r\n              \r\n              setPacmanIndex(currentPacmanIndex-width);\r\n              \r\n              setCount(count + 1);\r\n            }\r\n            break;\r\n          case 39:\r\n            if(currentPacmanIndex % width < width - 1 && walls.indexOf(currentPacmanIndex + 1) === -1){\r\n              setPrevPacmanIndex(currentPacmanIndex);\r\n             \r\n              setPacmanIndex(currentPacmanIndex+1);\r\n              \r\n              setCount(count + 1);\r\n            }\r\n            break;\r\n          case 40:\r\n            if(currentPacmanIndex + width < width * width && walls.indexOf(currentPacmanIndex + width )=== -1){\r\n              setPrevPacmanIndex(currentPacmanIndex);\r\n              \r\n              setPacmanIndex(currentPacmanIndex+width);\r\n              \r\n              setCount(count + 1);\r\n            }\r\n            break;\r\n        }   \r\n      }\r\n\r\n\r\n      return () => {\r\n        document.removeEventListener(\"keyup\", movePacman);\r\n      }\r\n    } \r\n    \r\n  });\r\n\r\n  \r\n \r\n      \r\n  \r\n  const handlerPacMovement = function movePacman(e) {\r\n\r\n    switch(e.target.className) {\r\n      case \"left\":\r\n        if(currentPacmanIndex % width !== 0 && walls.indexOf(currentPacmanIndex-1) === -1){\r\n          setPrevPacmanIndex(currentPacmanIndex);         \r\n          setPacmanIndex(currentPacmanIndex-1);\r\n         \r\n        }\r\n        break;\r\n      case \"up\":\r\n        if(currentPacmanIndex - width > 0 && walls.indexOf(currentPacmanIndex-width) === -1){\r\n          setPrevPacmanIndex(currentPacmanIndex);\r\n          \r\n          setPacmanIndex(currentPacmanIndex-width);\r\n          \r\n          \r\n        }\r\n        break;\r\n      case \"right\":\r\n        if(currentPacmanIndex % width < width - 1 && walls.indexOf(currentPacmanIndex + 1) === -1){\r\n          setPrevPacmanIndex(currentPacmanIndex);\r\n          \r\n          setPacmanIndex(currentPacmanIndex+1);\r\n          \r\n          \r\n        }\r\n        break;\r\n      case \"down\":\r\n        if(currentPacmanIndex + width < width * width && walls.indexOf(currentPacmanIndex + width )=== -1){\r\n          setPrevPacmanIndex(currentPacmanIndex);\r\n          \r\n          setPacmanIndex(currentPacmanIndex+width);\r\n          \r\n          \r\n        }\r\n        break;\r\n    }   \r\n  }\r\n\r\n  \r\n\r\n  let game;\r\n  let movementButtons;\r\n  let newGame = \"change map\";\r\n  if(stage !== \"game over\"){\r\n    game = <div className = \"grid\">{squares}</div>;\r\n    \r\n    movementButtons = \r\n    <div className = \"movement_buttons\">\r\n      <button className = \"up\" onClick = {(e) => handlerPacMovement(e)}>↑</button>\r\n      <div>\r\n        <button className = \"left\" onClick = {(e) => handlerPacMovement(e)}>←</button>\r\n        <button className = \"down\" onClick = {(e) => handlerPacMovement(e)}>↓</button>\r\n        <button className = \"right\" onClick = {(e) => handlerPacMovement(e)}>→</button>\r\n      </div>\r\n    </div>;\r\n  } else if (stage === \"game over\") {\r\n    game = <div className = \"gameover_text\">GAME OVER</div>;\r\n    newGame = \"new game\";\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className = \"game\">\r\n      {game}\r\n      <div className = \"game_data\">remain dots: {pacDots.length}</div>\r\n      <button className = \"change_map_button\" onClick = {() => window.location.reload()}>{newGame}</button>\r\n      {movementButtons}\r\n      \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}